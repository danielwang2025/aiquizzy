
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// For Vercel deployment using environment variables
declare const SUPABASE_URL: string;
declare const SUPABASE_PUBLISHABLE_KEY: string;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Mock functions to simulate database operations without actual DB tables
export const mockDB = {
  from: (table: string) => ({
    select: (columns: string = '*') => ({
      eq: (column: string, value: any) => ({
        single: async () => ({ data: null, error: null })
      }),
      limit: (limit: number) => ({
        eq: (column: string, value: any) => ({
          data: null, 
          error: null
        })
      })
    }),
    insert: (data: any) => ({
      data: null, 
      error: null
    }),
    update: (data: any) => ({
      eq: (column: string, value: any) => ({
        data: null, 
        error: null
      })
    })
  })
};

// Override supabase methods to avoid errors
const originalFrom = supabase.from.bind(supabase);
supabase.from = (table: string) => {
  try {
    return originalFrom(table as any);
  } catch (error) {
    console.warn(`Table ${table} doesn't exist in schema, using mock`);
    return mockDB.from(table) as any;
  }
};
